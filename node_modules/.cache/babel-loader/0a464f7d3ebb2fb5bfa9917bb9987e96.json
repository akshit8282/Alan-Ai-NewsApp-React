{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\node js\\\\react udemy\\\\voice news App\\\\newsapp\\\\src\\\\Components\\\\NewsCards\\\\NewsCards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NewsCard from '../NewsCard/NewsCard';\nimport { Typography, Grid, Grow } from '@material-ui/core';\nimport useStyle from './Style.js';\nconst infoCards = [{\n  color: '#00838f',\n  title: 'Latest News',\n  text: 'Give me the latest news'\n}, {\n  color: '#1565c0',\n  title: 'News by Categories',\n  info: 'Business, Entertainment, General, Health, Science, Sports, Technology',\n  text: 'Give me the latest Technology news'\n}, {\n  color: '#4527a0',\n  title: 'News by Terms',\n  info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...',\n  text: 'What\\'s up with PlayStation 5'\n}, {\n  color: '#283593',\n  title: 'News by Sources',\n  info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...',\n  text: 'Give me the news from CNN'\n}];\n\nconst NewsCards = ({\n  articles\n}) => {\n  _s();\n\n  const classes = useStyle();\n\n  if (!articles.length) {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            display: \"flex\"\n          },\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            style: {\n              backgroundColor: infoCard.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: infoCard.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 1\n            }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: infoCard.title.split(' ')[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 89\n              }, this), infoCard.info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Try Saying :\", infoCard.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: articles.map((article, i) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            display: \"flex\"\n          },\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(NewsCard, {\n            article: article,\n            i: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(NewsCards, \"eTC39ZLyyKld6i5R1gil2d/OHGM=\", false, function () {\n  return [useStyle];\n});\n\n_c = NewsCards;\nexport default NewsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"sources":["C:/Users/hp/Documents/node js/react udemy/voice news App/newsapp/src/Components/NewsCards/NewsCards.js"],"names":["React","NewsCard","Typography","Grid","Grow","useStyle","infoCards","color","title","text","info","NewsCards","articles","classes","length","container","map","infoCard","display","card","backgroundColor","split","article","i"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport NewsCard from '../NewsCard/NewsCard'\r\nimport {Typography,Grid,Grow} from '@material-ui/core'\r\nimport useStyle from './Style.js'\r\n\r\n\r\nconst infoCards = [\r\n    { color: '#00838f', title: 'Latest News', text: 'Give me the latest news' },\r\n    { color: '#1565c0', title: 'News by Categories', info: 'Business, Entertainment, General, Health, Science, Sports, Technology', text: 'Give me the latest Technology news' },\r\n    { color: '#4527a0', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...', text: 'What\\'s up with PlayStation 5' },\r\n    { color: '#283593', title: 'News by Sources', info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...', text: 'Give me the news from CNN' },\r\n  ];\r\n\r\nconst NewsCards = ({articles}) => {\r\n    const classes=useStyle();\r\nif(!articles.length){\r\n    return (\r\n        <Grow in>\r\n        <Grid  className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n        {infoCards.map((infoCard)=>(\r\n     <Grid item  style={{display:\"flex\"}} xs={12} sm={6} md={4} lg={3}>\r\n         <div className={classes.card} style={{backgroundColor:infoCard.color}}>\r\n<Typography variant=\"h5\">{infoCard.title}</Typography>\r\n{infoCard.info?(<Typography variant=\"h6\"><strong>{infoCard.title.split(' ')[2]}</strong><br/>{infoCard.info}</Typography>):null}\r\n<Typography variant=\"h6\">Try Saying :{infoCard.text}</Typography>\r\n         </div>\r\n     </Grid>\r\n))\r\n}\r\n   </Grid>        \r\n</Grow>\r\n    )\r\n}\r\nelse{\r\n    return (\r\n        <Grow in>\r\n<Grid  className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n{articles.map((article,i)=>(\r\n    <Grid item  style={{display:\"flex\"}} xs={12} sm={6} md={4} lg={3}>\r\n               <NewsCard article={article} i={i} key={i}/>\r\n               </Grid>\r\n            ))}\r\n</Grid>\r\n\r\n           \r\n        </Grow>\r\n    )\r\n}\r\n}\r\n\r\nexport default NewsCards\r\n"]},"metadata":{},"sourceType":"module"}